# Server Configuration
server.port=${SERVER_PORT:8080}

# Security Configuration
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# Tomcat Configuration - Enhanced security and performance
server.tomcat.connection-timeout=30000
server.tomcat.socket-timeout=30000
server.tomcat.keep-alive-timeout=60000
server.tomcat.max-keep-alive-requests=100
server.tomcat.max-connections=200
server.tomcat.accept-count=100
server.tomcat.max-http-form-post-size=2MB
server.tomcat.max-swallow-size=2MB

# Additional timeout settings
server.tomcat.connectionTimeout=30000
server.connection-timeout=30000

# Database Configuration - Using Kubernetes Secrets (keeping original vars)
spring.datasource.url=jdbc:postgresql://${DB_HOST:database}:${DB_PORT:5432}/${DB_NAME:moviereviews}
spring.datasource.username=${DB_USERNAME:movieuser}
spring.datasource.password=${DB_PASSWORD:moviepass}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration - Enhanced security
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection Pool Settings - Enhanced security and resilience
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=5000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.initialization-fail-timeout=-1
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.pool-name=MovieReviewHikariCP

# Resilience Configuration
spring.datasource.continue-on-error=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.continue-on-error=true
spring.jpa.open-in-view=false

# Model Server Configuration
model.server.url=${MODEL_SERVER_URL:http://model:5000}
model.server.timeout=5000

# Application Configuration
app.name=Movie Review Backend
app.version=1.0.0

# Rate Limiting Configuration
resilience4j.ratelimiter.instances.default.limit-refresh-period=60s
resilience4j.ratelimiter.instances.default.limit-for-period=100
resilience4j.ratelimiter.instances.default.timeout-duration=1s

# Logging Configuration - Enhanced security
logging.level.com.moviereview=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.com.zaxxer.hikari=WARN
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=ERROR
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration - Enhanced security
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
management.endpoint.health.show-components=when_authorized
management.info.env.enabled=true

# Jackson Configuration - Security
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# HTTP Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Security Headers (additional to SecurityConfig)
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true 